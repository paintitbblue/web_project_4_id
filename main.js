!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,o(n.key),n)}}function o(t){var o=function(t,o){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==e(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===e(o)?o:String(o)}var r=function(){function e(t){var r,n,i,s=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=this,i=function(e){"Escape"===e.key&&document.querySelector(".popup-overlay").classList.contains("popup-overlay_active")&&s.popupClose()},(n=o(n="closeAllPopup"))in r?Object.defineProperty(r,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[n]=i,this._element=t,this.setEventListeners(),this.popupOpen=this.popupOpen.bind(this),this.popupClose=this.popupClose.bind(this),this.closeAllPopup=this.closeAllPopup.bind(this)}var r,n;return r=e,(n=[{key:"setEventListeners",value:function(){this._element.querySelector(".element__image").addEventListener("click",this.popupOpen),document.querySelector(".popup-close-btn").addEventListener("click",this.popupClose),document.querySelector(".popup-overlay").addEventListener("click",this.popupClose),document.addEventListener("keyup",this.closeAllPopup)}},{key:"popupOpen",value:function(){var e=this.parentElement.querySelector(".element__image").src,t=this.parentElement.querySelector(".element__caption").textContent;document.querySelector(".popup-image").src=e,document.querySelector(".popup-title").textContent=t,document.querySelector(".popup-overlay").classList.add("popup-overlay_active"),document.addEventListener("keyup",this.closeAllPopup)}},{key:"popupClose",value:function(){document.querySelector(".popup-overlay").classList.remove("popup-overlay_active"),document.removeEventListener("keyup",this.closeAllPopup)}},{key:"closeAnywhere",value:function(e){e.target===this.editFormOverlay&&this.closeEditForm(),e.target===this.addFormOverlay&&this.closeAddCardForm(),e.target===this.popupOverlay&&this.closePopupImage()}}])&&t(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),e}();function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function i(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!==n(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===n(i)?i:String(i)),r)}var i}var s=function(){function e(t,o,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._caption=t,this._image=o,this._idx=r,this._onDelete=n,this._deleteCard=this._deleteCard.bind(this)}var t,o;return t=e,(o=[{key:"_getTemplate",value:function(){return document.querySelector("#element").content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".element__image").src=this._image,this._element.querySelector(".element__caption").textContent=this._caption,this._setEventListeners(),new r(this._element),this._element}},{key:"_setEventListeners",value:function(){this._element.querySelector(".element__delete").addEventListener("click",this._deleteCard),this._element.querySelector(".element__like").addEventListener("click",this._likeCard)}},{key:"_deleteCard",value:function(e){this._onDelete(this._idx)}},{key:"_likeCard",value:function(e){this.classList.toggle("element__like-active")}}])&&i(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function a(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,n=function(e,t){if("object"!==l(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===l(n)?n:String(n)),r)}var n}var u=function(){function e(t,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formElement=t,this.selectors=o,this.inputList=Array.from(t.querySelectorAll("input")),this.buttonElement=t.querySelector(".form__submit-btn")}var t,o;return t=e,(o=[{key:"showInputError",value:function(e,t){var o=this.formElement.querySelector(".".concat(e.id,"-error"));e.classList.add("form__input_type_error"),o.textContent=t,o.classList.add("form__input-error")}},{key:"hideInputError",value:function(e){var t=this.formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove("form__input_type_error"),t.classList.remove("form__input-error"),t.textContent=""}},{key:"checkInputValidity",value:function(e){e.validity.valid?this.hideInputError(e):this.showInputError(e,e.validationMessage)}},{key:"hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(){this.hasInvalidInput()?(this.buttonElement.classList.add("form__submit-btn-inactive"),this.buttonElement.disabled=!0):(this.buttonElement.classList.remove("form__submit-btn-inactive"),this.buttonElement.disabled=!1)}},{key:"setEventListeners",value:function(){var e=this;this.toggleButtonState(),this.inputList.forEach((function(t){t.addEventListener("input",(function(){e.checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this.formElement.addEventListener("submit",(function(e){e.preventDefault()})),this.setEventListeners()}}])&&a(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}(),c=document.querySelector(".form");function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function m(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,p(r.key),r)}}function p(e){var t=function(e,t){if("object"!==d(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===d(t)?t:String(t)}function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,n=function(e,t){if("object"!==y(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===y(n)?n:String(n)),r)}var n}function v(e,t,o){return t&&f(e.prototype,t),o&&f(e,o),Object.defineProperty(e,"prototype",{writable:!1}),e}new u(document.querySelector(".add-form")).enableValidation(),new u(c).enableValidation();var b=new(function(){function e(t,o){var r,n,i,s=this,l=t.items,a=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=this,i=function(e){s._renderedItems.splice(e,1),s.renderItems()},(n=p(n="_deleteCard"))in r?Object.defineProperty(r,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[n]=i,this._renderedItems=l,this._renderer=a,this._container=document.querySelector(o)}var t,o;return t=e,(o=[{key:"addItem",value:function(e){this._renderedItems.unshift(e),this.renderItems()}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){this._renderer(this._container,this._renderedItems)}}])&&m(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}())({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg"},{name:"Louise Lake",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg"},{name:"Bald Mountain",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg"}],renderer:function(e,t){var o=this,r=[];e.innerHTML="",t.forEach((function(t,n){var i=new s(t.name,t.link,n,o._deleteCard).generateCard();r.push(i),e.append(i)}))}},".elements");b.renderItems();var _=function(){function e(){h(this,e),this.openEditFormBtn=document.querySelector(".profile__edit-btn"),this.closeEditFormBtn=document.querySelector(".profile__edit-close-btn"),this.submitEditFormBtn=document.querySelector(".profile__edit-form"),this.editForm=document.querySelector(".profile__edit-form"),this.editFormOverlay=document.querySelector(".profile__edit-form-overlay"),this.profileName=document.querySelector(".profile__info-name"),this.profileJob=document.querySelector(".profile__info-job"),this.inputName=this.editForm.querySelector('input[name="name"]'),this.inputJob=this.editForm.querySelector('input[name="job"]'),this.openEditForm=this.openEditForm.bind(this),this.closeEditForm=this.closeEditForm.bind(this),this.submitEditForm=this.submitEditForm.bind(this),this.closeAnywhere=this.closeAnywhere.bind(this),this.openEditFormBtn.addEventListener("click",this.openEditForm),this.closeEditFormBtn.addEventListener("click",this.closeEditForm),this.submitEditFormBtn.addEventListener("submit",this.submitEditForm)}return v(e,[{key:"openEditForm",value:function(){var e=this;this.editFormOverlay.classList.add("profile__edit-form-overlay_active"),this.inputName.value=this.profileName.textContent,this.inputJob.value=this.profileJob.textContent,document.addEventListener("keyup",this.closeAllPopup.bind(this)),this.editFormOverlay.addEventListener("click",(function(t){e.closeAnywhere(t)}))}},{key:"closeEditForm",value:function(){this.editFormOverlay.classList.remove("profile__edit-form-overlay_active"),document.removeEventListener("keyup",this.closeAllPopup)}},{key:"submitEditForm",value:function(e){var t=this;e.preventDefault(),this.profileName.textContent=this.inputName.value,this.profileJob.textContent=this.inputJob.value,this.closeEditForm(),this.editForm.addEventListener("keyup",(function(e){"Enter"===e.key&&t.submitEditForm(e)}))}},{key:"closeAllPopup",value:function(e){"Escape"===e.key&&this.editFormOverlay.classList.contains("profile__edit-form-overlay_active")&&this.closeEditForm()}},{key:"closeAnywhere",value:function(e){e.target===this.editFormOverlay&&this.closeEditForm(),e.target===this.addFormOverlay&&this.closeAddCardForm(),e.target===this.popupOverlay&&this.closePopupImage()}}]),e}(),E=function(){function e(){h(this,e),this.addCardBtn=document.querySelector(".profile__add-btn-rect"),this.addFormOverlay=document.querySelector(".form-overlay"),this.addForm=document.querySelector(".add-form"),this.closeCardBtn=document.querySelector(".form__close-btn"),this.submitCardBtn=document.querySelector(".add-form"),this.inputTitle=document.querySelector("input[name='title']"),this.inputUrl=document.querySelector("input[name='url']"),this.openAddCardForm=this.openAddCardForm.bind(this),this.closeAddCardForm=this.closeAddCardForm.bind(this),this.addNewCard=this.addNewCard.bind(this),this.closeAnywhere=this.closeAnywhere.bind(this),this.closeAllPopup=this.closeAllPopup.bind(this),this.addCardBtn.addEventListener("click",this.openAddCardForm),this.closeCardBtn.addEventListener("click",this.closeAddCardForm),this.submitCardBtn.addEventListener("submit",this.addNewCard)}return v(e,[{key:"openAddCardForm",value:function(){var e=this;this.addFormOverlay.classList.add("form-overlay_active"),document.addEventListener("keyup",this.closeAllPopup),this.addFormOverlay.addEventListener("click",(function(t){e.closeAnywhere(t)}))}},{key:"closeAddCardForm",value:function(){this.addFormOverlay.classList.remove("form-overlay_active"),document.removeEventListener("keyup",this.closeAllPopup)}},{key:"addNewCard",value:function(e){e.preventDefault();var t={name:this.inputTitle.value,link:this.inputUrl.value};b.addItem(t),this.closeAddCardForm()}},{key:"closeAllPopup",value:function(e){"Escape"===e.key&&this.addFormOverlay.classList.contains("form-overlay_active")&&this.closeAddCardForm()}},{key:"closeAnywhere",value:function(e){e.target===this.editFormOverlay&&this.closeEditForm(),e.target===this.addFormOverlay&&this.closeAddCardForm(),e.target===this.popupOverlay&&this.closePopupImage()}}]),e}();new _,new E}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,